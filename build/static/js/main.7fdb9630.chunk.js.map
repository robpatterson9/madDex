{"version":3,"sources":["config/constants/types.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/index.ts","state/types.ts","config/constants/index.ts","state/user/actions.ts","utils/contractHelpers.ts","hooks/useContract.ts","components/Balance.tsx","state/user/hooks/index.tsx","state/pools/hooks.ts","utils/multicall.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","config/constants/endpoints.ts","utils/wrappedCurrency.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","config/index.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","components/QuestionHelper/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","utils/prices.ts","state/multicall/actions.ts","state/nftMarket/types.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/transactions/actions.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","state/wallet/hooks.ts","state/transactions/hooks.tsx","state/predictions/config.ts","state/info/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","hooks/useRefresh.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","state/lottery/helpers.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","routerHistory.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","hooks/usePreviousValue.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Loader/CircleLoader.tsx","components/Tags.tsx","utils/web3React.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","state/profile/hooks.ts","hooks/useLastUpdated.ts","components/TokenImage/index.tsx","components/Menu/Footer.tsx","views/Page.tsx","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/nftMarket/reducer.ts","components/PageHeader/PageHeader.tsx","state/lottery/index.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","hooks/useIntersectionObserver.ts","components/Select/Select.tsx","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","components/Loading.tsx","utils/farmHelpers.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","hooks/useScrollOnRouteChange.ts","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/utils.ts","components/Menu/config/footerConfig.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setProvider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","tlos","nft","stephero","pros","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","mad","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","ProfileAvatarFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useCake","useBunnyFactory","usePancakeRabbits","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useAnniversaryAchievementContract","useFarmAuctionContract","useNftMarketContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchUserPools","fastRefresh","fetchPoolsUserDataAsync","usePools","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getTotalWon","request","gql","market","totalBNBTreasury","getBetHistory","where","first","skip","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","default","parseUnits","fast","instant","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","protocol","overview","chartData","transactions","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","getCollectionsApi","fetch","ok","json","statusText","getCollectionApi","getNftsFromCollectionApi","getNftApi","getNftsFromDifferentCollectionsApi","promises","responses","resp","collectionName","collection","description","attributes","image","original","thumbnail","getCollectionSg","getCollectionsSg","collections","getNftsFromCollectionSg","nfts","getNftsByBunnyIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","pancakeBunniesAddress","getMarketDataForTokenIds","getNftsMarketData","getAllPancakeBunniesLowestPrice","bunnyIds","singlePancakeBunnySubQueries","rawResponse","lowestPricesData","subQueryKey","currentAskPrice","getAllPancakeBunniesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","getLatestListedNfts","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokenIds","nftLocation","NftLocation","WALLET","tokensWithCollectionAddress","walletNfts","flat","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","prev","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketData","marketNft","metadataUrl","transactionHistory","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","location","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIds","tokenId_in","walletNftsWithMarketData","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","NFTMarketInitializationState","UserNftInitializationState","AskOrderType","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","enableEmergencyWithdraw","COMMUNITY","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","useInitialBlock","initialBlock","CollectionKey","PANCAKE","slug","SQUAD","nftsBaseUrl","TMP_SEE_ALL_LINK","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","useAllTransactions","isTransactionRecent","allTransactions","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","RefreshContext","slow","isInitialized","hasRegistered","profileAvatars","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","points","meta","arg","usernameFetchStatus","FETCHING","avatarFetchStatus","FETCHED","NOT_FETCHED","fetchProfile","getProfile","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","useGetCakeBalance","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","uriLocations","history","createBrowserHistory","isZero","hexNumberString","getItem","startLength","endLength","substring","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAdded","uriToHttp","uri","substr","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","usePreviousValue","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","StyledSVG","svg","stroke","CircleLoader","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TransactionState","IconWrapper","failure","Transaction","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","REACT_APP_NODE_ALT","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","transformProfileResponse","profileResponse","userId","numberPoints","profileContract","getUserProfile","apiRes","nftToken","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubstrings","trim","Dots","span","images","md","ipfs","textColor","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","maxWidth","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","getAchievements","hasProfile","useGetProfileAvatar","setStateLastUpdated","previousLastUpdated","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","xs","flexGrow","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","quoteTokenAddress","toLocaleLowerCase","getUserPointIncreaseEvents","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","setSelectedAddress","IDLE","newestRound","maxBy","futureRound","futureRounds","currentRound","initializationState","UNINITIALIZED","isFetchingMoreNfts","latestFetchAt","lastUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","nftsMarket","apiMetadata","traitType","displayType","updateNftTokensData","fetchNftsByBunnyId","existingMetadata","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","userActivity","NftMarket","INITIALIZED","existingNftsInState","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","Outer","Inner","PageHeader","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","Loading","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","Dot","ProfileUserMenuItem","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","getActiveSubMenuItem","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","footerLinks","isHighlighted","Menu","activeMenuItem","menuConfig","getActiveMenuItem","activeSubMenuItem","userMenu","globalMenu","currentLang","langs","setLang","links","subLinks","hideSubNav","activeItem","activeSubItem","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","setIsLoading","claimAnniversaryPoints","handleClick","endIcon","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","setCanClaimAnniversaryPoints","onPresentAnniversaryModal","canClaim","canClaimAnniversary","fetchClaimAnniversaryStatus","matchesSomeLocations","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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EACA,6CACA,GACA,OACA,aACA,sBAEFkB,KAAM,IAAIb,IACRL,EACA,6CACA,GACA,OACA,OACA,wBAEFmB,IAAK,IAAId,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFoB,IAAK,IAAIf,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFqB,KAAM,IAAIhB,IACRL,EACA,6CACA,GACA,OACA,uBACA,8BAEFsB,KAAM,IAAIjB,IACRL,EACA,6CACA,GACA,OACA,eACA,sBAEFuB,SAAU,IAAIlB,IACZL,EACA,6CACA,GACA,WACA,iBACA,6BAEFwB,KAAM,IAAInB,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFyB,MAAO,IAAIpB,IACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEF0B,IAAK,IAAIrB,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEF2B,MAAO,IAAItB,IACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF4B,OAAQ,IAAIvB,IACVL,EACA,6CACA,GACA,SACA,eACA,8BAEF6B,IAAK,IAAIxB,IACPL,EACA,6CACA,GACA,MACA,cACA,2BAEF8B,MAAO,IAAIzB,IACTL,EACA,6CACA,EACA,QACA,cACA,wBAEF+B,MAAO,IAAI1B,IACTL,EACA,6CACA,EACA,QACA,cACA,0BAEFgC,MAAO,IAAI3B,IACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEFiC,IAAK,IAAI5B,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFkC,SAAU,IAAI7B,IACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFmC,KAAM,IAAI9B,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFoC,KAAM,IAAI/B,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFqC,IAAK,IAAIhC,IACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFsC,KAAM,IAAIjC,IACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEFuC,KAAM,IAAIlC,IACRL,EACA,6CACA,GACA,OACA,aACA,+BAEFwC,MAAO,IAAInC,IACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEFyC,GAAI,IAAIpC,IACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEF0C,IAAK,IAAIrC,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF2C,MAAO,IAAItC,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF4C,MAAO,IAAIvC,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF6C,QAAS,IAAIxC,IACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEF8C,KAAM,IAAIzC,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG+C,IAAK,IAAI1C,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFgD,IAAK,IAAI3C,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFiD,OAAQ,IAAI5C,IACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFkD,OAAQ,IAAI7C,IACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFmD,KAAM,IAAI9C,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFoD,IAAK,IAAI/C,IAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FqD,KAAM,IAAIhD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFsD,IAAK,IAAIjD,IACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEFuD,MAAO,IAAIlD,IACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEFwD,MAAO,IAAInD,IACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEFyD,IAAK,IAAIpD,IACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEF0D,IAAK,IAAIrD,IACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEF2D,KAAM,IAAItD,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF4D,KAAM,IAAIvD,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF6D,IAAK,IAAIxD,IACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEF8D,KAAM,IAAIzD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF+D,IAAK,IAAI1D,IACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEFgE,IAAK,IAAI3D,IACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEFiE,MAAO,IAAI5D,IACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFkE,KAAM,IAAI7D,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFmE,KAAM,IAAI9D,IACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFoE,IAAK,IAAI/D,IACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFqE,MAAO,IAAIhE,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFsE,KAAM,IAAIjE,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFuE,QAAS,IAAIlE,IACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEFwE,IAAK,IAAInE,IACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEFyE,KAAM,IAAIpE,IACRL,EACA,6CACA,GACA,OACA,aACA,0BAEF0E,IAAK,IAAIrE,IACPL,EACA,6CACA,GACA,MACA,YACA,0BAEF2E,IAAK,IAAItE,IACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF4E,KAAM,IAAIvE,IACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEF6E,IAAK,IAAIxE,IACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEF8E,KAAM,IAAIzE,IACRL,EACA,6CACA,EACA,OACA,eACA,2BAEF+E,IAAK,IAAI1E,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFgF,KAAM,IAAI3E,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFiF,MAAO,IAAI5E,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFkF,MAAO,IAAI7E,IACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFmF,KAAM,IAAI9E,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFoF,MAAO,IAAI/E,IACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFqF,IAAK,IAAIhF,IACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFsF,IAAK,IAAIjF,IACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEFuF,GAAI,IAAIlF,IACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEFwF,KAAM,IAAInF,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFyF,IAAK,IAAIpF,IACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEF0F,IAAK,IAAIrF,IACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEF2F,IAAK,IAAItF,IACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF4F,KAAM,IAAIvF,IACRL,EACA,6CACA,GACA,OACA,aACA,6BAEF6F,IAAK,IAAIxF,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF8F,KAAM,IAAIzF,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF+F,QAAS,IAAI1F,IACXL,EACA,6CACA,GACA,UACA,eACA,sBAEFgG,KAAM,IAAI3F,IACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEFiG,IAAK,IAAI5F,IACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFkG,IAAK,IAAI7F,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFmG,IAAK,IAAI9F,IACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFoG,IAAK,IAAI/F,IACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFqG,IAAK,IAAIhG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGsG,MAAO,IAAIjG,IACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEFuG,IAAK,IAAIlG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGwG,MAAO,IAAInG,IACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEFyG,KAAM,IAAIpG,IACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEF0G,KAAM,IAAIrG,IACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEF2G,KAAM,IAAItG,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF4G,KAAM,IAAIvG,IACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEF6G,MAAO,IAAIxG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8G,OAAQ,IAAIzG,IACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEF+G,MAAO,IAAI1G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFgH,MAAO,IAAI3G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFiH,IAAK,IAAI5G,IACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFkH,IAAK,IAAI7G,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFmH,KAAM,IAAI9G,IACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFoH,IAAK,IAAI/G,IACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFqH,IAAK,IAAIhH,IACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFsH,KAAM,IAAIjH,IACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEFuH,IAAK,IAAIlH,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFwH,KAAM,IAAInH,IACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEFyH,KAAM,IAAIpH,IACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEF0H,IAAK,IAAIrH,IACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEF2H,IAAK,IAAItH,IACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF4H,IAAK,IAAIvH,IACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEF6H,IAAK,IAAIxH,IACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEF8H,IAAK,IAAIzH,IACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEF+H,KAAM,IAAI1H,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFgI,OAAQ,IAAI3H,IACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEFiI,MAAO,IAAI5H,IACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFkI,QAAS,IAAI7H,IACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFmI,MAAO,IAAI9H,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFoI,IAAK,IAAI/H,IACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFqI,IAAK,IAAIhI,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFsI,KAAM,IAAIjI,IACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEFuI,IAAK,IAAIlI,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFwI,KAAM,IAAInI,IACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEFyI,IAAK,IAAIpI,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEF0I,KAAM,IAAIrI,IACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEF2I,KAAM,IAAItI,IACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF4I,IAAK,IAAIvI,IACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEF6I,IAAK,IAAIxI,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF8I,KAAM,IAAIzI,IACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEF+I,IAAK,IAAI1I,IACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEFgJ,KAAM,IAAI3I,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEFiJ,KAAM,IAAI5I,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGkJ,IAAK,IAAI7I,IAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FmJ,KAAM,IAAI9I,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFoJ,OAAQ,IAAI/I,IACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFqJ,IAAK,IAAIhJ,IACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFsJ,KAAM,IAAIjJ,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFuJ,KAAM,IAAIlJ,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFwJ,IAAK,IAAInJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEFyJ,IAAK,IAAIpJ,IACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEF0J,IAAK,IAAIrJ,IACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEF2J,KAAM,IAAItJ,IACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF4J,KAAM,IAAIvJ,IACRL,EACA,6CACA,GACA,OACA,YACA,yBAEF6J,IAAK,IAAIxJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEF8J,MAAO,IAAIzJ,IACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEF+J,IAAK,IAAI1J,IACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEFgK,IAAK,IAAI3J,IACPL,EACA,6CACA,GACA,MACA,YACA,oCAEFiK,MAAO,IAAI5J,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFkK,IAAK,IAAI7J,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFmK,YAAM,IAAI9J,IACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFoK,IAAK,IAAI/J,IACPL,EACA,6CACA,EACA,MACA,WACA,6BAEFqK,IAAK,IAAIhK,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFsK,IAAK,IAAIjK,IACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEFuK,IAAK,IAAIlK,IACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEFwK,IAAK,IAAInK,IACPL,EACA,6CACA,GACA,MACA,aACA,yBAEFyK,IAAK,IAAIpK,IACPL,EACA,6CACA,GACA,MACA,YACA,yBAEF0K,MAAO,IAAIrK,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF2K,KAAM,IAAItK,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF4K,IAAK,IAAIvK,IACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEF6K,IAAK,IAAIxK,IACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEF8K,KAAM,IAAIzK,IACRL,EACA,6CACA,GACA,OACA,aACA,uBAEF+K,IAAK,IAAI1K,IACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEFgL,KAAM,IAAI3K,IACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEFiL,KAAM,IAAI5K,IACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFkL,IAAK,IAAI7K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFmL,KAAM,IAAI9K,IACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFoL,aAAO,IAAI/K,IACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFqL,IAAK,IAAIhL,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFsL,KAAM,IAAIjL,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFuL,MAAO,IAAIlL,IACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEFwL,KAAM,IAAInL,IACRL,EACA,6CACA,GACA,OACA,aACA,8BAEFyL,KAAM,IAAIpL,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF0L,IAAK,IAAIrL,IAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F2L,IAAK,IAAItL,IACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF4L,KAAM,IAAIvL,IACRL,EACA,6CACA,GACA,OACA,aACA,gCAEF6L,KAAM,IAAIxL,IACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEF8L,IAAK,IAAIzL,IACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEF+L,OAAQ,IAAI1L,IACVL,EACA,6CACA,GACA,SACA,cACA,0BAEFgM,MAAO,IAAI3L,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFiM,GAAI,IAAI5L,IACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFkM,IAAK,IAAI7L,IACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFmM,KAAM,IAAI9L,IACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFoM,KAAM,IAAI/L,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFqM,IAAK,IAAIhM,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFsM,IAAK,IAAIjM,IACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEFuM,KAAM,IAAIlM,IACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEFwM,GAAI,IAAInM,IAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FyM,IAAK,IAAIpM,IACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEF0M,KAAM,IAAIrM,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEF2M,OAAQ,IAAItM,IACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF4M,MAAO,IAAIvM,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF6M,KAAM,IAAIxM,IACRL,EACA,6CACA,EACA,OACA,aACA,+BAEF8M,GAAI,IAAIzM,IACNL,EACA,6CACA,GACA,KACA,gBACA,uBAEF+M,IAAK,IAAI1M,IAAML,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGgN,IAAK,IAAI3M,IACPL,EACA,6CACA,GACA,MACA,eACA,0BAEFiN,IAAK,IAAI5M,IACPL,EACA,6CACA,GACA,MACA,yBACA,wBAEFkN,IAAK,IAAI7M,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFmN,SAAU,IAAI9M,IACZL,EACA,6CACA,EACA,WACA,iBACA,yBAEFoN,IAAK,IAAI/M,IACPL,EACA,6CACA,GACA,MACA,qCACA,6BAEFqN,IAAK,IAAIhN,IACPL,EACA,6CACA,GACA,MACA,eACA,uBAEFsN,KAAM,IAAIjN,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFuN,IAAK,IAAIlN,IACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEFwN,KAAM,IAAInN,IACRL,EACA,6CACA,GACA,OACA,aACA,iCAEFyN,GAAI,IAAIpN,IACNL,EACA,6CACA,GACA,KACA,kBACA,8BAEF0N,MAAO,IAAIrN,IACTL,EACA,6CACA,GACA,QACA,qBACA,yBAEF2N,KAAM,IAAItN,IACRL,EACA,6CACA,GACA,OACA,YACA,0BAIS4N,EAAgB,CAC3BxN,KAAM,IAAIC,IACRH,EACA,6CACA,GACA,OACA,cACA,4BAEFK,KAAM,IAAIF,IACRH,EACA,6CACA,GACA,OACA,o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","file":"static/js/main.7fdb9630.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'BTCb',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.mad.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  mad: new Token(\n    MAINNET,\n    '0xb08ba8C99A883D85D929f561B81Bb8C365A5a93b',\n    9,\n    'MAD',\n    'MADToken',\n    'https://www.madtoken.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\n\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.cake.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://maddex.netlify.app'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollection[]> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return []\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @returns\n */\nexport const getNftsFromCollectionApi = async (collectionAddress: string): Promise<ApiResponseCollectionTokens> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for all nfts in a collection using the Subgraph\n * @param collectionAddress\n * @returns\n */\nexport const getNftsFromCollectionSg = async (collectionAddress: string): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          nfts(first: 1000, where: $where) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_not_in: existingTokenIds },\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find((marketNft) => marketNft.tokenId === walletNft.tokenId)\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts makret data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIds = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIds.push(profileNftWithCollectionAddress)\n  }\n  const tokenIds = walletNftIds.map((nft) => nft.tokenId)\n\n  const marketDataForWalletNfts = await getNftsMarketData({ tokenId_in: tokenIds })\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIds, marketDataForWalletNfts)\n\n  const tokenIdsInWallet = walletNftIds\n    .filter((walletNft) => {\n      // Profile Pic NFT is included in walletNftIds array, hence this filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([...walletNftIds, ...forSaleNftIds])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    tokenIdsInWallet,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    isFetchingMoreNfts: boolean\n    latestFetchAt: number\n    lastUpdateAt: number\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsReponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 221,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nft,\n    contractAddress: {\n      97: '',\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '173727',\n  },\n  {\n    sousId: 220,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0861',\n  },\n  {\n    sousId: 219,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: serializedTokens.axs,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: serializedTokens.doge,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mad,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: serializedTokens.tpt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: serializedTokens.sushi,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: serializedTokens.twt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: serializedTokens.bnb,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\n\n// @TODO This will be removed when more collections are added\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\n\n// @TODO Remove after the V1\nexport const TMP_SEE_ALL_LINK = `${nftsBaseUrl}/collections/${pancakeBunniesAddress}`\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 2px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (e) {\n    console.error(e)\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: serializedTokens.syrup,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 437,\n    lpSymbol: 'BMON-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 446,\n    lpSymbol: 'BMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 458,\n    lpSymbol: 'PROS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x109cBFfE72C02F26536Ff8b92278Dfd3610dE656',\n    },\n    token: serializedTokens.pros,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 457,\n    lpSymbol: 'NFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ecc84c9629317a494f12bc56aa2522475bf32e8',\n    },\n    token: serializedTokens.nft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 429,\n    lpSymbol: 'CHESS-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n    },\n    token: serializedTokens.chess,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 447,\n    lpSymbol: 'GNT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\n    },\n    token: serializedTokens.gnt,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 425,\n    lpSymbol: 'DVI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n    },\n    token: serializedTokens.dvi,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 439,\n    lpSymbol: 'MCRN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\n    },\n    token: serializedTokens.mcrn,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 456,\n    lpSymbol: 'TLOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\n    },\n    token: serializedTokens.tlos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 455,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\n    },\n    token: serializedTokens.stephero,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 449,\n    lpSymbol: 'BP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\n    },\n    token: serializedTokens.bp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 454,\n    lpSymbol: 'BSCDEFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\n    },\n    token: serializedTokens.bscdefi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 453,\n    lpSymbol: 'QBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\n    },\n    token: serializedTokens.qbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 452,\n    lpSymbol: 'NAOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\n    },\n    token: serializedTokens.naos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 451,\n    lpSymbol: 'PHA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\n    },\n    token: serializedTokens.pha,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 450,\n    lpSymbol: 'SFUND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\n    },\n    token: serializedTokens.sfund,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 448,\n    lpSymbol: 'RUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\n    },\n    token: serializedTokens.rusd,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 445,\n    lpSymbol: 'POTS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\n    },\n    token: serializedTokens.pots,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: serializedTokens.tusd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 443,\n    lpSymbol: 'BTT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 442,\n    lpSymbol: 'TRX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 441,\n    lpSymbol: 'WIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 436,\n    lpSymbol: 'BABYCAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\n    },\n    token: serializedTokens.babycake,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 440,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\n    },\n    token: serializedTokens.hero,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 438,\n    lpSymbol: 'WSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\n    },\n    token: serializedTokens.wsg,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 435,\n    lpSymbol: 'REVV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\n    },\n    token: serializedTokens.revv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 434,\n    lpSymbol: 'SKILL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\n    },\n    token: serializedTokens.skill,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 433,\n    lpSymbol: 'IF-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\n    },\n    token: serializedTokens.if,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 432,\n    lpSymbol: 'SPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\n    },\n    token: serializedTokens.sps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 431,\n    lpSymbol: 'C98-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n    },\n    token: serializedTokens.c98,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 430,\n    lpSymbol: 'AXS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n    },\n    token: serializedTokens.axs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: serializedTokens.pmon,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 428,\n    lpSymbol: 'TITAN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n    },\n    token: serializedTokens.titan,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 427,\n    lpSymbol: 'ONE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n    },\n    token: serializedTokens.harmony,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 426,\n    lpSymbol: 'MASK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n    },\n    token: serializedTokens.mask,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 424,\n    lpSymbol: 'ADX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n    },\n    token: serializedTokens.adx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 423,\n    lpSymbol: 'USDC-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 422,\n    lpSymbol: 'CAKE-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: serializedTokens.bscpad,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: serializedTokens.rabbit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: serializedTokens.waultx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: serializedTokens.wex,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: serializedTokens.form,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: serializedTokens.orbs,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: serializedTokens.$dg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: serializedTokens.woo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: serializedTokens.htb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: serializedTokens.hai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: serializedTokens.o3,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: serializedTokens.ampl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: serializedTokens.marsh,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: serializedTokens.boring,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: serializedTokens.mbox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: serializedTokens.ata,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: serializedTokens.mx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: serializedTokens.bcfx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: serializedTokens.qkc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: serializedTokens.ktn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: serializedTokens.mtrg,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: serializedTokens.swg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: serializedTokens.vrt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: serializedTokens.ez,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: serializedTokens.kalm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: serializedTokens.popen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: serializedTokens.well,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: serializedTokens.deri,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: serializedTokens.chr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: serializedTokens.cyc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: serializedTokens.xend,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: serializedTokens.hotcross,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: serializedTokens.rfox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: serializedTokens.wmass,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: serializedTokens.ubxt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: serializedTokens.btr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: serializedTokens.τdoge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: serializedTokens.one,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: serializedTokens.fine,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: serializedTokens.doge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: serializedTokens.oin,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: serializedTokens.hyfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: serializedTokens.math,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: serializedTokens.mcoin,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: serializedTokens.pnt,\n    quoteToken: serializedTokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: serializedTokens.lmt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: serializedTokens.dfd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: serializedTokens.mad,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: serializedTokens.beth,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: serializedTokens.og,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: serializedTokens.asr,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: serializedTokens.atm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: serializedTokens.juv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: serializedTokens.psg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: serializedTokens.xtz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: serializedTokens.bch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: serializedTokens.stax,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: serializedTokens.nar,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: serializedTokens.nya,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: serializedTokens.burger,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n]\n\nexport default farms\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'MAD Token',\n  description:\n    'MAD Token',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else if (path.startsWith('/nfts/collections')) {\n    basePath = '/nfts/collections'\n  } else if (path.startsWith('/nfts/profile')) {\n    basePath = '/nfts/profile'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('MAD Token')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('MAD Token')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('MAD Token')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('MAD Token')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('MAD Token')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('PancakeSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('PancakeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('PancakeSwap')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('PancakeSwap')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('PancakeSwap')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('PancakeSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Tokens')} | ${t('PancakeSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/nfts':\n      return {\n        title: `${t('Overview')} | ${t('PancakeSwap')}`,\n      }\n    case '/nfts/collections':\n      return {\n        title: `${t('Collections')} | ${t('PancakeSwap')}`,\n      }\n    case '/nfts/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 116px;\n  padding-bottom: 116px;\n  background-image :url('./images/MAD_main.svg')\n  \n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = 6666666666\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title].join('  -  -  -  - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\nif (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_NODE_ALT) {\n  nodes.push(process.env.REACT_APP_NODE_ALT)\n}\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n<h1> MAD ! </h1>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  background-image :url('./images/MAD_main.svg');\n  \n  \n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps, ThemeSwitcher } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme, isDark, toggleTheme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <Flex justifyContent=\"space-between\">\n            <Text mb=\"24px\">{t('Dark mode')}</Text>\n            <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n          </Flex>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n        </Flex>\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={24} width={24} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  getNftsFromCollectionApi,\n  getNftsFromCollectionSg,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n} from './types'\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    isFetchingMoreNfts: false,\n    latestFetchAt: 0,\n    lastUpdateAt: Date.now(),\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections, collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk(\n  'nft/fetchNftsFromCollections',\n  async (collectionAddress: string) => {\n    try {\n      const [nfts, nftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(collectionAddress),\n        getNftsFromCollectionSg(collectionAddress),\n      ])\n\n      if (!nfts?.data) {\n        return []\n      }\n\n      if (collectionAddress === pancakeBunniesAddress) {\n        return nftsMarket.map((marketData) => {\n          // The fallback is just for the testnet where some bunnies don't exist\n          const apiMetadata = nfts.data[marketData.otherId] ?? {\n            name: '',\n            description: '',\n            collection: { name: 'Pancake Bunnies' },\n            image: {\n              original: '',\n              thumbnail: '',\n            },\n          }\n          // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n          const attributes = [\n            {\n              traitType: 'bunnyId',\n              value: marketData.otherId,\n              displayType: null,\n            },\n          ]\n          return {\n            tokenId: marketData.tokenId,\n            name: apiMetadata.name,\n            description: apiMetadata.description,\n            collectionName: apiMetadata.collection.name,\n            collectionAddress,\n            image: apiMetadata.image,\n            marketData,\n            attributes,\n          }\n        })\n      }\n\n      // TODO: revisit this for other collecitons\n      return []\n    } catch (error) {\n      console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n      return []\n    }\n  },\n)\n\n/**\n * Fetch fresh marketdata for existing tokens in the store\n */\nexport const updateNftTokensData = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; existingTokenIds: string[] }\n>('nft/updateNftTokensData', async ({ collectionAddress, existingTokenIds }) => {\n  try {\n    // TODO: this kinda should work for other collections too, but doublecheck during Squad integration\n    const [nfts, nftsMarket] = await Promise.all([\n      getNftsFromCollectionApi(collectionAddress),\n      getMarketDataForTokenIds(collectionAddress, existingTokenIds),\n    ])\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    return nftsMarket.map((marketData) => {\n      // The fallback is just for the testnet where some bunnies don't exist\n      const apiMetadata = nfts.data[marketData.otherId] ?? {\n        name: '',\n        description: '',\n        collection: { name: 'Pancake Bunnies' },\n        image: {\n          original: '',\n          thumbnail: '',\n        },\n      }\n      // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n      const attributes = [\n        {\n          traitType: 'bunnyId',\n          value: marketData.otherId,\n          displayType: null,\n        },\n      ]\n      return {\n        tokenId: marketData.tokenId,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress: pancakeBunniesAddress,\n        image: apiMetadata.image,\n        marketData,\n        attributes,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to update collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\n/**\n * Fetch all 30 on sale NFTs with specified bunny id\n */\nexport const fetchNftsByBunnyId = createAsyncThunk<\n  NftToken[],\n  { bunnyId: string; existingTokenIds: string[]; existingMetadata: ApiSingleTokenData; orderDirection: 'asc' | 'desc' }\n>('nft/fetchNftsByBunnyId', async ({ bunnyId, existingTokenIds, existingMetadata, orderDirection }) => {\n  try {\n    let nfts = { data: { [bunnyId]: existingMetadata } }\n    if (!existingMetadata) {\n      nfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n    }\n    const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokenIds, orderDirection)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    return nftsMarket.map((marketData) => {\n      // The fallback is just for the testnet where some bunnies don't exist\n      const apiMetadata = nfts.data[marketData.otherId] ?? {\n        name: '',\n        description: '',\n        collection: { name: 'Pancake Bunnies' },\n        image: {\n          original: '',\n          thumbnail: '',\n        },\n      }\n      // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n      const attributes = [\n        {\n          traitType: 'bunnyId',\n          value: marketData.otherId,\n          displayType: null,\n        },\n      ]\n      return {\n        tokenId: marketData.tokenId,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress: pancakeBunniesAddress,\n        image: apiMetadata.image,\n        marketData,\n        attributes,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n})\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  const tokens = { [tokenId]: { ...marketDataForNft[0], nftLocation } }\n  const completeNftData = { ...metadataForNft[0], tokens }\n\n  return completeNftData\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      state.data.nfts[action.meta.arg] = action.payload\n    })\n    builder.addCase(updateNftTokensData.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[action.meta.arg.collectionAddress] = action.payload\n        state.data.lastUpdateAt = Date.now()\n      }\n    })\n    builder.addCase(updateNftTokensData.rejected, (state) => {\n      state.data.lastUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNftsByBunnyId.pending, (state) => {\n      state.data.isFetchingMoreNfts = true\n    })\n    builder.addCase(fetchNftsByBunnyId.fulfilled, (state, action) => {\n      const existingNftsInState = state.data.nfts[pancakeBunniesAddress] || []\n      state.data.nfts[pancakeBunniesAddress] = [...existingNftsInState, ...action.payload]\n      state.data.isFetchingMoreNfts = false\n      state.data.latestFetchAt = Date.now()\n    })\n    builder.addCase(fetchNftsByBunnyId.rejected, (state) => {\n      state.data.isFetchingMoreNfts = false\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\nexport default NftMarket.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(CAKE_PER_YEAR) : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n  overflow-y: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\nimport MADmain from './MAD_main.svg'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  page {\n    background-image :url('./images/MAD_main.svg')\n \n  }\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t(''),\n    icon: '',\n    href: '/swap',\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  // {\n  //   label: t('Earn'),\n  //   href: '/farms',\n  //   icon: 'Earn',\n  //   items: [\n  //     {\n  //       label: t('Farms'),\n  //       href: '/farms',\n  //     },\n  //     {\n  //       label: t('Pools'),\n  //       href: '/pools',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('NFT'),\n  //   href: `${nftsBaseUrl}`,\n  //   icon: 'Nft',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: `${nftsBaseUrl}`,\n  //       status: {\n  //         text: t('Live'),\n  //         color: 'failure',\n  //       },\n  //     },\n  //     {\n  //       label: t('Collections'),\n  //       href: `${nftsBaseUrl}/collections`,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: '',\n  //   href: '/info',\n  //   icon: 'More',\n  //   hideSubNav: true,\n  //   items: [\n  //     {\n  //       label: t('Info'),\n  //       href: '/info',\n  //     },\n  //     {\n  //       label: t('IFO'),\n  //       href: '/ifo',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport history from 'routerHistory'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\ninterface ProfileUserMenuItemProps {\n  isLoading: boolean\n  hasProfile: boolean\n}\n\nconst Dot = styled.div`\n  background-color: ${({ theme }) => theme.colors.failure};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    history.push(`${nftsBaseUrl}/profile/${account.toLowerCase()}/achievements`)\n  }\n\n  const handleNoProfileClick = () => {\n    history.push('/create-profile')\n  }\n\n  if (isLoading) {\n    return (\n      <UserMenuItem>\n        <Skeleton height=\"24px\" width=\"35%\" />\n      </UserMenuItem>\n    )\n  }\n\n  if (!hasProfile) {\n    return (\n      <UserMenuItem as=\"button\" onClick={handleNoProfileClick}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Make a Profile')}\n          <Dot />\n        </Flex>\n      </UserMenuItem>\n    )\n  }\n\n  return (\n    <UserMenuItem as=\"button\" onClick={handleClick}>\n      {t('Your Profile')}\n    </UserMenuItem>\n  )\n}\n\nexport default ProfileUserMenuItem\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={() => history.push(`${nftsBaseUrl}/profile/${account.toLowerCase()}`)}>\n        {t('Your NFTs')}\n      </UserMenuItem>\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import { FooterLinkType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport const footerLinks: (t: ContextApi['t']) => FooterLinkType[] = (t) => [\n  {\n    label: ('mad'),\n    items: [\n \n      {\n        label: t('madtoken.org'),\n        href: 'https://madtoken.org/',\n        isHighlighted: true,\n      },\n    ],\n  }\n \n]\n","import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      footerLinks={footerLinks(t)}\n      activeItem={activeMenuItem?.href}\n      activeSubItem={activeSubMenuItem?.href}\n      // buyCakeLabel={t('Buy CAKE')}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useState } from 'react'\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\nimport { delay } from 'lodash'\n\nconst AnniversaryImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    try {\n      await claimAnniversaryPoints()\n    } finally {\n      onDismiss()\n    }\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Box>\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\n        </Box>\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\n          {t('You won points for joining PancakeSwap during the first year of our journey!')}\n        </Text>\n        <Button\n          disabled={isLoading}\n          onClick={handleClick}\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading ? t('Claiming...') : t('Claim now')}\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AnniversaryAchievementModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimAnniversaryStatus = async () => {\n      const { canClaim } = getAnniversaryAchievementContract()\n      const canClaimAnniversary = await canClaim(account)\n      setCanClaimAnniversaryPoints(canClaimAnniversary)\n    }\n\n    if (account) {\n      fetchClaimAnniversaryStatus()\n    }\n  }, [account])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentAnniversaryModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('CAKE bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <Container>\n      <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n        <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n          <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n            {t('Help')}\n          </ButtonText>\n          <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n        </Button>\n      </StyledLink>\n    </Container>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@pancakeswap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Swap to / from MAD')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact Too High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst NftMarket = lazy(() => import('./views/Nft/market'))\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={[]} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* NFT */}\n            <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route>\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}